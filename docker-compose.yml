version: '3.8'

services:
  mongodb:
    command: mongod --auth
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow_db || exit 0"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 90s
    restart: unless-stopped

  airflow:
    build: .
    container_name: airflow
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow_db
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__WEBSERVER__SECRET_KEY: "supersecretkey"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__CORE__FERNET_KEY: "46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho="
      AIRFLOW__CORE__DONOT_PICKLE: "true"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./logs:/opt/airflow/logs
    command: >
      bash -c "
      echo 'PostgreSQL bekleniyor (Max 5 dakika)...';
      timeout 300s bash -c 'until pg_isready -h postgres -p 5432 -U airflow -d airflow_db; do sleep 10; echo ''[$(date +\"%T\")] PostgreSQL hazır değil...''; done'
      && airflow db init
      && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      && airflow scheduler & airflow webserver
      "
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 10
    restart: unless-stopped

volumes:
  mongodb_data:
  postgres_data: